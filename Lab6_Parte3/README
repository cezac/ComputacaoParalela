Crie um código-fonte em C, utilizando somente #pragma omp parallel para encontrar um elemento em um vetor de tamanho de 2^16. Para isso:

garanta que os elementos no vetor sejam únicos

faça a busca em um elemento que realmente exista

utilize as primitiva omp_get_num_threads(), omp_get_max_threads() e omp_get_thread_num()

compile preferencialmente sem a opção -O2

não utilize qualquer outra função OpenMP, ou de sincronização, além daquela descrita acima

para testar a lógica do seu algoritmo, faça testes em vetores de tamanho pequenos.

o nome do seu programa deve ser: busca.c

o elemento a ser buscado deve ser recebido na linha de comando e também o nome do arquivo de busca (vou usar os arquivos de exemplo).

o programa deve retornar unicamente a posição do elemento no vetor; não use nenhum outro printf no seu código, apenas a posição do elemento ou -1 caso não seja encontrado

Ao final, imprima a posição do elemento encontrado.

Submeter: o código fonte e prints da tela da execução junto com os tempos de execução paralela e serial, além do cáculo de speedup.

Utilize o arquivo vetor1.txt para testar seu código.

======================================================================================================================================================================
RESPOSTA:

ALGORITMO SEQUENCIAL:
Tempo de processamento para armazenar o vetor = 0.033000s
Tempo de processamento para ordenar o vetor = 11.699000s
Tempo de processamento para encontrar o elemento = 19.642000s
Tempo de processamento total = 31.374000s


ALGORITMO PARALELIZADO:
Tempo de processamento para armazenar o vetor = 0.033000s
Tempo de processamento para ordenar o vetor = 5.411000s
Tempo de processamento para encontrar o elemento = 10.744000s
Tempo de processamento total = 16.188000s
